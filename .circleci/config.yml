version: 2.1

orbs:
  node: circleci/node@3.0.0
  cypress: cypress-io/cypress@1

jobs:
  test-backend-integration:
    machine: true
    docker:
      - image: cimg/node:17.0.1
        environment:
          NODE_OPTIONS: --openssl-legacy-provider
      - image: circleci/postgres
        environment:
          POSTGRES_DB: template
          POSTGRES_USER: template
          POSTGRES_PASSWORD: template
          PGDATA: /var/lib/postgresql/data/pgdata
    environment:
      DATABASE_URL: postgres://template:template@localhost:5432/template
      JWT_ACCESS_TOKEN_SECRET: template_access
      JWT_ACCESS_TOKEN_EXPIRATION_TIME: 86400
      JWT_REFRESH_TOKEN_SECRET: template_refresh
      JWT_REFRESH_TOKEN_EXPIRATION_TIME: 31540000
      IS_CI_BUILD: 1
    steps:
      - checkout
      - run:
          name: Install backend dependencies
          command: cd backend && npm install
      - run:
          name: Install JUnit coverage reporter
          command: npm install -D jest-junit
      - run:
          name: Run backend mock tests
          command: npm run test:backend:ci
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
      - store_test_results:
          path: ./backend/reports/junit/
      - store_artifacts:
          path: ./backend/reports/junit
  test-backend-mock:
    executor:
      name: node/default
    steps:
      - checkout
      - run:
          name: Install backend dependencies
          command: cd backend && npm install
      - run:
          name: Install JUnit coverage reporter
          command: npm install -D jest-junit
      - run:
          name: Run backend mock tests
          command: npm run test:backend:mock:ci
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
      - store_test_results:
          path: ./backend/reports/junit/
      - store_artifacts:
          path: ./backend/reports/junit
  test-frontend:
    executor:
      name: node/default
    steps:
      - checkout
      - run:
          name: Install frontend dependencies
          command: cd frontend && npm install
      - run:
          name: Install JUnit coverage reporter
          command: npm install -D jest-junit
      - run:
          name: Run frontend unit tests
          command: npm run test:frontend:ci
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
      - store_test_results:
          path: ./frontend/reports/junit/
      - store_artifacts:
          path: ./frontend/reports/junit
  test-e2e:
    docker:
      - image: cimg/node:17.0.1
        environment:
          NODE_OPTIONS: --openssl-legacy-provider
      - image: circleci/postgres
        environment:
          POSTGRES_DB: template
          POSTGRES_USER: template
          POSTGRES_PASSWORD: template
          PGDATA: /var/lib/postgresql/data/pgdata
    environment:
      DATABASE_URL: postgres://template:template@localhost:5432/template
      JWT_ACCESS_TOKEN_SECRET: template_access
      JWT_ACCESS_TOKEN_EXPIRATION_TIME: 86400
      JWT_REFRESH_TOKEN_SECRET: template_refresh
      JWT_REFRESH_TOKEN_EXPIRATION_TIME: 31540000
    steps:
      - checkout
      - run:
          name: Install frontend and backend dependencies
          command: npm install
      - run:
          name: Build app
          command: npm run build:frontend && npm run build:backend
      - run:
          name: Run app
          command: npm start
      - run:
          name: Run E2E tests
          command: npx cypress run

workflows:
  test:
    jobs:
      - test-backend-integration:
          name: Backend Integration Tests
      - test-backend-mock:
          name: Backend Mock Integration Tests
      - test-frontend:
          name: Frontend Component Tests
      - test-e2e:
          name: E2E Tests
